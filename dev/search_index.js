var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = SimpleStatics","category":"page"},{"location":"#SimpleStatics","page":"Home","title":"SimpleStatics","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for SimpleStatics.","category":"page"},{"location":"","page":"Home","title":"Home","text":"SimpleStatics is a package that assists in the computation and visualization of 2D structure stresses and strains.","category":"page"},{"location":"","page":"Home","title":"Home","text":"As the name might suggest, structures can be created and analyzed with fair ease, with each problem being started with","category":"page"},{"location":"","page":"Home","title":"Home","text":"my_setup = StaticSetup()","category":"page"},{"location":"","page":"Home","title":"Home","text":"creating an empty statics problem which can then be filled with members, joints, forces, etc.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Lets create a simple truss to analyze. First, we need to define a material. Some ","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [SimpleStatics]","category":"page"},{"location":"#SimpleStatics.UnorderedPair","page":"Home","title":"SimpleStatics.UnorderedPair","text":"Create a pair of items whose order is independent in hashes, equality, and comparisons.\n\n\n\n\n\n","category":"type"},{"location":"#SimpleStatics.add_joint!-Union{Tuple{T}, Tuple{StaticSetup{T}, SimpleStatics.Vector2D{T}}, Tuple{StaticSetup{T}, SimpleStatics.Vector2D{T}, SimpleStatics.StaticConstraint}} where T","page":"Home","title":"SimpleStatics.add_joint!","text":"Add a joint to the setup and return the index referring to that joint. The position should be set in meters.\n\n\n\n\n\n","category":"method"},{"location":"#SimpleStatics.add_member!-Union{Tuple{T}, Tuple{StaticSetup, Int64, Int64}, Tuple{StaticSetup, Int64, Int64, StaticMaterial{T}}} where T","page":"Home","title":"SimpleStatics.add_member!","text":"Add a member to the setup and return the index referring to that member.\n\n\n\n\n\n","category":"method"},{"location":"#SimpleStatics.constrained_array-Tuple{AbstractArray, Vector{<:Integer}}","page":"Home","title":"SimpleStatics.constrained_array","text":"Construct a view of an array where constrained indices, indicated by a mapping, are removed. This is useful for solving matrices as zero rows will cause det(M)==0.\n\n\n\n\n\n","category":"method"},{"location":"#SimpleStatics.constrained_dof_array_mapping-Tuple{Any}","page":"Home","title":"SimpleStatics.constrained_dof_array_mapping","text":"Find a mapping m[i] -> j where i is the index of a constrained dof array and j is the corresponding index of the unconstrained array.\n\n\n\n\n\n","category":"method"},{"location":"#SimpleStatics.dof_indices-Tuple{Integer}","page":"Home","title":"SimpleStatics.dof_indices","text":"Get the indices of the x and y rows, respectively, in a square DOF-like matrix (e.g., global stiffness matrix) for a vertex (joint) index.\n\n\n\n\n\n","category":"method"},{"location":"#SimpleStatics.force_vector-Tuple{StaticSetup}","page":"Home","title":"SimpleStatics.force_vector","text":"Get a vector of the unconstrained forces in the setup.\n\n\n\n\n\n","category":"method"},{"location":"#SimpleStatics.member_angle-Tuple{StaticSetup, Int64}","page":"Home","title":"SimpleStatics.member_angle","text":"Get the angle, in radians, the member makes with the global coordinate system's positive X axis.\n\n\n\n\n\n","category":"method"},{"location":"#SimpleStatics.member_stiffness_matrix-Tuple{StaticSetup, Any}","page":"Home","title":"SimpleStatics.member_stiffness_matrix","text":"Get the global stiffness matrix for a StaticSetup in Newtons / Meter.\n\n\n\n\n\n","category":"method"},{"location":"#SimpleStatics.n_dofs-Tuple{StaticSetup}","page":"Home","title":"SimpleStatics.n_dofs","text":"Naive number of dergees of freedom in the system (i.e., before constraints).\n\n\n\n\n\n","category":"method"},{"location":"#SimpleStatics.original_array-Tuple{AbstractArray}","page":"Home","title":"SimpleStatics.original_array","text":"Recover the original array where DOF indices will match with the StaticSetup.\n\n\n\n\n\n","category":"method"},{"location":"#SimpleStatics.set_force!-Union{Tuple{T}, Tuple{StaticSetup{T}, Int64, SimpleStatics.Vector2D{T}}} where T","page":"Home","title":"SimpleStatics.set_force!","text":"Set the force at a joint, in Newtons.\n\n\n\n\n\n","category":"method"},{"location":"#SimpleStatics.solve_member_stresses-Union{Tuple{T}, Tuple{StaticSetup{T}, Vector{<:SimpleStatics.Vector2D}}} where T","page":"Home","title":"SimpleStatics.solve_member_stresses","text":"Negative -> Compressive, Positive -> Tensile, index matches member index\n\n\n\n\n\n","category":"method"},{"location":"#SimpleStatics.terminal_joints-Tuple{StaticSetup, Integer}","page":"Home","title":"SimpleStatics.terminal_joints","text":"Get the joints IDs that a member connects, found by its member ID.\n\n\n\n\n\n","category":"method"}]
}
